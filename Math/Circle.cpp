#include "Circle.h"
#include <vector>
#include <cmath>
#include "Editor/Polyline.h"
# define M_PI           3.14159265358979323846  /* pi */


//-----------------------------------------------------------------------------
/**
  \ru Коструктор Circle. Вычисляются записываются два радиуса и центральная точка
*/
//-----------------------------------------------------------------------------
Circle::Circle( Point center, double r ):
  center( center ),
  r     ( r     )
{
}

//-----------------------------------------------------------------------------
/**
  \ru возвращается точка по параметру t
*/
//-----------------------------------------------------------------------------
Point Circle::GetPoint( double t ) const
{
  return Point( center.GetX() + r * sin(t), center.GetY() + r * cos(t) );
}


//-----------------------------------------------------------------------------
/**
  \ru возращаются границы параметра t для окружности
*/
//-----------------------------------------------------------------------------
Range Circle::GetRange() const
{
  return Range( 0.0, 2.0 * M_PI );
}


//-----------------------------------------------------------------------------
/**
  \ru возвращает производную окружности по параметру t
*/
//-----------------------------------------------------------------------------


Point Circle::GetDerivativePoint( double t ) const
{
  return Point( r * cos(t), -r * sin(t) );
}


//-----------------------------------------------------------------------------
/**
  \ru возвращает вторую окружности по параметру t
*/
//-----------------------------------------------------------------------------
Point Circle::Get2DerivativePoint( double t ) const
{
  return Point( -r * sin(t), -r * cos(t) );
}


//-----------------------------------------------------------------------------
/**
  \ru позвращается полилилния для окружности - используется общий алгоритм
*/
//-----------------------------------------------------------------------------
void Circle::GetAsPolyLine( std::vector<Point> & polyLinePoints, double accuracy ) const
{
  Polyline polyline( this, accuracy );
  polyLinePoints = polyline.GetPoints();
}

